"""First migration

Revision ID: efbc9a7fb669
Revises: 
Create Date: 2024-06-17 00:49:36.087905

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from geoalchemy2.types import Geography

# revision identifiers, used by Alembic.
revision: str = "efbc9a7fb669"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("phone", sa.Integer(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column("status", sa.String(), server_default=sa.text("'new'"), nullable=False),
        sa.Column("date_reg", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("photo", sa.String(), nullable=True),
        sa.Column("text", sa.String(), nullable=True),
        sa.CheckConstraint(
            "status IN ('new', 'active', 'archive', 'banned')", name="chk_users_status"
        ),
        sa.CheckConstraint(
            "phone IS NOT NULL OR email IS NOT NULL", name="chk_users_phone_or_email"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("phone"),
    )
    op.create_table(
        "auth_token",
        sa.Column("token", sa.String(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("token"),
    )
    op.create_table(
        "users_location",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "location",
            Geography(
                geometry_type="POINT", srid=4326, from_text="ST_GeogFromText", name="geography"
            ),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id"),
    )
    # op.create_index('idx_users_location_location', 'users_location', ['location'], unique=False, postgresql_using='gist') # TODO Индекс создаётся автоматически
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "idx_users_location_location", table_name="users_location", postgresql_using="gist"
    )
    op.drop_table("users_location")
    op.drop_table("auth_token")
    op.drop_table("users")
    # ### end Alembic commands ###
